version: '3.8'

services:
  # 后端API服务 - 开发环境
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./zhiyue_dev.db
      - REDIS_URL=redis://redis-dev:6379/0
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
      - DEBUG=true
      - LOG_LEVEL=DEBUG
    volumes:
      - ./backend:/app
      - ./storage:/app/storage
      - ./logs:/app/logs
      - ./.env:/app/.env
    depends_on:
      - redis-dev
    restart: unless-stopped
    command: >
      sh -c "pip install -r requirements.txt &&
             python -m alembic upgrade head &&
             uvicorn main:app --host 0.0.0.0 --port 8000 --reload"

  # Redis缓存 - 开发环境
  redis-dev:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # 前端开发服务器
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=http://localhost:8001
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./index.html:/app/index.html
      - ./vite.config.ts:/app/vite.config.ts
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./tailwind.config.js:/app/tailwind.config.js
      - ./postcss.config.js:/app/postcss.config.js
    depends_on:
      - backend-dev
    restart: unless-stopped
    command: >
      sh -c "npm install &&
             npm run dev -- --host 0.0.0.0"

  # 数据库管理工具
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=sqlite
    restart: unless-stopped

  # Redis管理工具
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis-dev:6379
    depends_on:
      - redis-dev
    restart: unless-stopped

volumes:
  redis_dev_data:

networks:
  default:
    driver: bridge